{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport TreeNode from './TreeNode';\nimport { getTreeNodeProps } from './utils/treeUtil';\nimport { TreeContext } from './contextTypes';\n\nvar MotionTreeNode = function MotionTreeNode(_ref, ref) {\n  var className = _ref.className,\n      style = _ref.style,\n      motion = _ref.motion,\n      motionNodes = _ref.motionNodes,\n      motionType = _ref.motionType,\n      onOriginMotionEnd = _ref.onMotionEnd,\n      active = _ref.active,\n      treeNodeRequiredProps = _ref.treeNodeRequiredProps,\n      props = _objectWithoutProperties(_ref, [\"className\", \"style\", \"motion\", \"motionNodes\", \"motionType\", \"onMotionEnd\", \"active\", \"treeNodeRequiredProps\"]);\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var _React$useContext = React.useContext(TreeContext),\n      prefixCls = _React$useContext.prefixCls;\n\n  var motionedRef = React.useRef(false);\n\n  var onMotionEnd = function onMotionEnd() {\n    if (!motionedRef.current) {\n      onOriginMotionEnd();\n    }\n\n    motionedRef.current = true;\n  };\n\n  useEffect(function () {\n    if (motionNodes && motionType === 'hide' && visible) {\n      setVisible(false);\n    }\n  }, [motionNodes]);\n  useEffect(function () {\n    return function () {\n      if (motionNodes) {\n        onMotionEnd();\n      }\n    };\n  }, []);\n\n  if (motionNodes) {\n    return React.createElement(CSSMotion, Object.assign({\n      ref: ref,\n      visible: visible\n    }, motion, {\n      motionAppear: motionType === 'show',\n      onAppearEnd: onMotionEnd,\n      onLeaveEnd: onMotionEnd\n    }), function (_ref2, motionRef) {\n      var motionClassName = _ref2.className,\n          motionStyle = _ref2.style;\n      return React.createElement(\"div\", {\n        ref: motionRef,\n        className: classNames(\"\".concat(prefixCls, \"-treenode-motion\"), motionClassName),\n        style: motionStyle\n      }, motionNodes.map(function (treeNode) {\n        var _treeNode$data = treeNode.data,\n            key = _treeNode$data.key,\n            restProps = _objectWithoutProperties(_treeNode$data, [\"key\"]),\n            isStart = treeNode.isStart,\n            isEnd = treeNode.isEnd;\n\n        delete restProps.children;\n        var treeNodeProps = getTreeNodeProps(key, treeNodeRequiredProps);\n        return React.createElement(TreeNode, Object.assign({}, restProps, treeNodeProps, {\n          active: active,\n          data: treeNode.data,\n          key: key,\n          isStart: isStart,\n          isEnd: isEnd\n        }));\n      }));\n    });\n  }\n\n  return React.createElement(TreeNode, Object.assign({\n    domRef: ref,\n    className: className,\n    style: style\n  }, props, {\n    active: active\n  }));\n};\n\nMotionTreeNode.displayName = 'MotionTreeNode';\nvar RefMotionTreeNode = React.forwardRef(MotionTreeNode);\nexport default RefMotionTreeNode;","map":{"version":3,"sources":["/Users/wangbing/Desktop/cz/czqjw/node_modules/rc-tree/es/MotionTreeNode.js"],"names":["_slicedToArray","_objectWithoutProperties","React","useEffect","classNames","CSSMotion","TreeNode","getTreeNodeProps","TreeContext","MotionTreeNode","_ref","ref","className","style","motion","motionNodes","motionType","onOriginMotionEnd","onMotionEnd","active","treeNodeRequiredProps","props","_React$useState","useState","_React$useState2","visible","setVisible","_React$useContext","useContext","prefixCls","motionedRef","useRef","current","createElement","Object","assign","motionAppear","onAppearEnd","onLeaveEnd","_ref2","motionRef","motionClassName","motionStyle","concat","map","treeNode","_treeNode$data","data","key","restProps","isStart","isEnd","children","treeNodeProps","domRef","displayName","RefMotionTreeNode","forwardRef"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport TreeNode from './TreeNode';\nimport { getTreeNodeProps } from './utils/treeUtil';\nimport { TreeContext } from './contextTypes';\n\nvar MotionTreeNode = function MotionTreeNode(_ref, ref) {\n  var className = _ref.className,\n      style = _ref.style,\n      motion = _ref.motion,\n      motionNodes = _ref.motionNodes,\n      motionType = _ref.motionType,\n      onOriginMotionEnd = _ref.onMotionEnd,\n      active = _ref.active,\n      treeNodeRequiredProps = _ref.treeNodeRequiredProps,\n      props = _objectWithoutProperties(_ref, [\"className\", \"style\", \"motion\", \"motionNodes\", \"motionType\", \"onMotionEnd\", \"active\", \"treeNodeRequiredProps\"]);\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var _React$useContext = React.useContext(TreeContext),\n      prefixCls = _React$useContext.prefixCls;\n\n  var motionedRef = React.useRef(false);\n\n  var onMotionEnd = function onMotionEnd() {\n    if (!motionedRef.current) {\n      onOriginMotionEnd();\n    }\n\n    motionedRef.current = true;\n  };\n\n  useEffect(function () {\n    if (motionNodes && motionType === 'hide' && visible) {\n      setVisible(false);\n    }\n  }, [motionNodes]);\n  useEffect(function () {\n    return function () {\n      if (motionNodes) {\n        onMotionEnd();\n      }\n    };\n  }, []);\n\n  if (motionNodes) {\n    return React.createElement(CSSMotion, Object.assign({\n      ref: ref,\n      visible: visible\n    }, motion, {\n      motionAppear: motionType === 'show',\n      onAppearEnd: onMotionEnd,\n      onLeaveEnd: onMotionEnd\n    }), function (_ref2, motionRef) {\n      var motionClassName = _ref2.className,\n          motionStyle = _ref2.style;\n      return React.createElement(\"div\", {\n        ref: motionRef,\n        className: classNames(\"\".concat(prefixCls, \"-treenode-motion\"), motionClassName),\n        style: motionStyle\n      }, motionNodes.map(function (treeNode) {\n        var _treeNode$data = treeNode.data,\n            key = _treeNode$data.key,\n            restProps = _objectWithoutProperties(_treeNode$data, [\"key\"]),\n            isStart = treeNode.isStart,\n            isEnd = treeNode.isEnd;\n\n        delete restProps.children;\n        var treeNodeProps = getTreeNodeProps(key, treeNodeRequiredProps);\n        return React.createElement(TreeNode, Object.assign({}, restProps, treeNodeProps, {\n          active: active,\n          data: treeNode.data,\n          key: key,\n          isStart: isStart,\n          isEnd: isEnd\n        }));\n      }));\n    });\n  }\n\n  return React.createElement(TreeNode, Object.assign({\n    domRef: ref,\n    className: className,\n    style: style\n  }, props, {\n    active: active\n  }));\n};\n\nMotionTreeNode.displayName = 'MotionTreeNode';\nvar RefMotionTreeNode = React.forwardRef(MotionTreeNode);\nexport default RefMotionTreeNode;"]},"metadata":{},"sourceType":"module"}